{"ast":null,"code":"import React from \"react\";\n{\n  /*\n  class TodoApp extends React.Component {\n     constructor(props) {\n       super(props);\n       this.state = { items: [], text: '' };\n       this.handleChange = this.handleChange.bind(this);\n       this.handleSubmit = this.handleSubmit.bind(this);\n     }\n   \n     render() {\n       return (\n         <div>\n           <h3>TODO</h3>\n           <TodoList items={this.state.items} />\n           <form onSubmit={this.handleSubmit}>\n             <label htmlFor=\"new-todo\">\n               What needs to be done?\n             </label>\n             <input\n               id=\"new-todo\"\n               onChange={this.handleChange}\n               value={this.state.text}\n             />\n             <button>\n               Add #{this.state.items.length + 1}\n             </button>\n           </form>\n         </div>\n       );\n     }\n   \n     handleChange(e) {\n       this.setState({ text: e.target.value });\n     }\n   \n     handleSubmit(e) {\n       e.preventDefault();\n       if (this.state.text.length === 0) {\n         return;\n       }\n       const newItem = {\n         text: this.state.text,\n         id: Date.now()\n       };\n       this.setState(state => ({\n         items: state.items.concat(newItem),\n         text: ''\n       }));\n     }\n   }\n   \n   class TodoList extends React.Component {\n     render() {\n       return (\n         <ul>\n           {this.props.items.map(item => (\n             <li key={item.id}>{item.text}</li>\n           ))}\n         </ul>\n       );\n     }\n   }\n   \n  export default TodoApp;\n  */\n}\n\nclass App extends React.Component {}\n\nexport default App;","map":{"version":3,"names":["React","App","Component"],"sources":["/home/jonny/Desktop/React/reactss/src/App.js"],"sourcesContent":["import React from \"react\";\n{/*\nclass TodoApp extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { items: [], text: '' };\n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    render() {\n      return (\n        <div>\n          <h3>TODO</h3>\n          <TodoList items={this.state.items} />\n          <form onSubmit={this.handleSubmit}>\n            <label htmlFor=\"new-todo\">\n              What needs to be done?\n            </label>\n            <input\n              id=\"new-todo\"\n              onChange={this.handleChange}\n              value={this.state.text}\n            />\n            <button>\n              Add #{this.state.items.length + 1}\n            </button>\n          </form>\n        </div>\n      );\n    }\n  \n    handleChange(e) {\n      this.setState({ text: e.target.value });\n    }\n  \n    handleSubmit(e) {\n      e.preventDefault();\n      if (this.state.text.length === 0) {\n        return;\n      }\n      const newItem = {\n        text: this.state.text,\n        id: Date.now()\n      };\n      this.setState(state => ({\n        items: state.items.concat(newItem),\n        text: ''\n      }));\n    }\n  }\n  \n  class TodoList extends React.Component {\n    render() {\n      return (\n        <ul>\n          {this.props.items.map(item => (\n            <li key={item.id}>{item.text}</li>\n          ))}\n        </ul>\n      );\n    }\n  }\n  \nexport default TodoApp;\n*/}\nclass App extends React.Component{\n\n}\n\n  export default App;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAG;;AACH,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;;AAI/B,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}